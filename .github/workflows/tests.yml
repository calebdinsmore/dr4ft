name: Automated tests

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'

jobs:
  node:
    name: Node ${{ matrix.node_version }}

    strategy:
      fail-fast: false
      matrix:
        node_version:
          - lts/*
          - current

    runs-on: ubuntu-latest
    
    # Allow failues for most recent Node release
    continue-on-error: ${{ matrix.node_version == 'current' }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm

      # See https://github.com/npm/cli/issues/2610
      - name: Workaround for Node 14
        if: matrix.node_version == '14'
        run: sed -i 's/git+ssh/git+https/g' package-lock.json

      - name: Install
        run: npm clean-install

      - name: Test
        run: npm run test


  docker:
    name: Docker

    runs-on: ubuntu-latest

    continue-on-error: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image from Dockerfile
        run: docker build --tag dr4ft-app .

      - name: Run container from image
        run: docker run --detach --name dr4ft -p 1337:1337 dr4ft-app
      
      # TODO: Extend this and test e.g. creating a game via API
      - name: Access dr4ft page
        run: wget http://localhost:1337

      - name: Show information
        run: |
          docker --version
          echo
          docker images dr4ft-app
          echo
          docker ps
          echo
          echo "Node version (dr4ft-app image)"
          docker run dr4ft-app node --version
          echo
          docker top dr4ft
          

  lint:
    name: ESLint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        run: npm clean-install --ignore-scripts

      - name: Run ESLint
        run: |
          node --version
          echo
          npm run lint
